#!/usr/bin/env ruby

require 'rubygems' # ruby1.9 doesn't "require" it though
require 'bundler/setup'
require 'slack_cli'
require 'thor'

# Thor options parser
class CLI < Thor
  class_option :debug, type: :boolean, alias: '-d'
  class_option :cache, type: :boolean, default: true, desc: 'Channels and Users are cached'

  def self.exit_on_failure?
    true
  end

  desc 'authorize', 'Authorize the CLI and get an access_token'
  def authorize
    SlackCLI.authorize
  end

  desc 'post', 'Post message to channel'
  method_option :channel, required: true, aliases: '-c', desc: 'Channel to post the message'
  def post(*text)
    handle_class_options
    SlackCLI.post(channel: options[:channel], text: text.join(' '))
  end

  desc 'rtm', 'Real Time Message Connect'
  method_option :type, default: ['message'], type: 'array', desc: 'List of message types to retrieve'
  def rtm
    handle_class_options
    types = Set.new(options[:type])
    
    $stderr.puts({types: types.to_a}.to_json)
    EM.run {
      SlackCLI.rtm_connect do |msg|
        if types.include?(msg['type'])
          puts msg.to_json
        end
      end
    }
  end

  private

  def handle_class_options
    SlackCLI.clear_cache unless options[:cache]
    $DEBUG = options[:debug]
  end
end

CLI.start
